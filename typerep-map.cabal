cabal-version:       2.4
name:                typerep-map
version:             0.3.2
synopsis:            Efficient implementation of a dependent map with types as keys
description:
    A dependent map from type representations to values of these types.
    .
    Here is an illustration of such a map:
    .
    >     TMap
    > ---------------
    >  Int  -> 5
    >  Bool -> True
    >  Char -> 'x'
    .
    In addition to @TMap@, we provide @TypeRepMap@ parametrized by a
    @vinyl@-style interpretation. This data structure is equivalent to @DMap
    TypeRep@, but with significantly more efficient lookups.

homepage:            https://github.com/kowainik/typerep-map
bug-reports:         https://github.com/kowainik/typerep-map/issues
license:             MIT
license-file:        LICENSE
author:              Veronika Romashkina, Vladislav Zavialov, Dmitrii Kovanikov
maintainer:          Kowainik <xrom.xkov@gmail.com>
copyright:           2017-2019 Kowainik
category:            Data, Data Structures, Types
build-type:          Simple
extra-doc-files:     README.md
                   , CHANGELOG.md
tested-with:         GHC == 8.2.2
                   , GHC == 8.4.4
                   , GHC == 8.6.5

source-repository head
  type:                git
  location:            https://github.com/kowainik/typerep-map.git

common common-options
  build-depends:       base >= 4.10 && < 4.13

  default-language:    Haskell2010
  default-extensions:  BangPatterns
                       OverloadedStrings
                       RecordWildCards
                       ScopedTypeVariables
                       TypeApplications

library
  import:              common-options
  hs-source-dirs:      src
  exposed-modules:     Data.TMap
                       Data.TypeRepMap
                       Data.TypeRepMap.Internal

  build-depends:       containers >= 0.5.10.2 && < 0.7
                     , ghc-prim ^>= 0.5.1.1
                     , primitive ^>= 0.7.0
                     , deepseq ^>= 1.4

library typerep-extra-impls
  import:              common-options
  hs-source-dirs:      typerep-extra-impls
  exposed-modules:     Data.TypeRep.CMap
                       Data.TypeRep.OptimalVector
                       Data.TypeRep.Vector

  build-depends:       containers >= 0.5.10.2 && < 0.7
                     , vector ^>= 0.12.0.1
                     , deepseq ^>= 1.4

test-suite typerep-map-test
  import:              common-options
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test

  main-is:             Test.hs
  other-modules:       Test.TypeRep.CMap
                     , Test.TypeRep.CacheMap
                     , Test.TypeRep.MapProperty
                     , Test.TypeRep.Vector
                     , Test.TypeRep.VectorOpt

  build-tool-depends:  tasty-discover:tasty-discover
  build-depends:       ghc-typelits-knownnat >= 0.4.2 && < 0.7
                     , hedgehog ^>= 1.0
                     , typerep-map
                     , typerep-extra-impls
                     , tasty >= 1.0.1.1 && < 1.3
                     , tasty-discover >= 4.1.1 && < 4.3
                     , tasty-hedgehog ^>= 1.0.0.0
                     , tasty-hspec ^>= 1.1.5

  ghc-options:         -threaded -rtsopts -with-rtsopts=-N

benchmark typerep-map-benchmark
  import:              common-options
  type:                exitcode-stdio-1.0
  hs-source-dirs:      benchmark

  main-is:             Main.hs
  other-modules:       CMap
                     , CacheMap
                     , DMap
                     , Spec
                     , Vector
                     , OptimalVector

  build-depends:       criterion >= 1.4.1.0 && < 1.6
                     , deepseq ^>= 1.4.3.0
                     , dependent-map >= 0.2.4.0 && < 0.5
                     , dependent-sum ^>= 0.5
                     , ghc-typelits-knownnat >= 0.4.2 && < 0.7
                     , typerep-map
                     , typerep-extra-impls

  ghc-options:         -O2 -threaded -rtsopts -with-rtsopts=-N -freduction-depth=0
